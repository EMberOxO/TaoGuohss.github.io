{"pages":[],"posts":[{"title":"Hello World","text":"初始博客,由hexo搭建我的第一个博客 2021/2/10","link":"/2021/02/09/hello-world/"},{"title":"确定类型","text":"确定类型typeof操作符最适合作为用来判断一个变量是否为原始类型。更确切地说，它是判断一个变量是否为字符串、数值、布尔值或undefined的最好方式。如果值是对象或null，那么typeof返回”object“，如下列例子所示: 123456789101112let s = 'Ember';let b = true;let i = 22;let u;let n = null;let o = new Object();console.log(typeof s); //stringconsole.log(typeof b); //booleanconsole.log(typeof i); //numberconsole.log(typeof u); //undefinedconsole.log(typeof n); //objectconsole.log(typeof o); //object typeof虽然对原始值很有用，但它对引用值的用处不大。我们通常不关心一个值是不是对象，而想知道它是什么类型的对象。为了解决这个问题，ECMscript提供了instanceof操作符，语法如下: 1result = variable instanceof constructor 如果变量是给定引用类型的实例，则instanceof操作符返回true。来看下面的例子: 123console.log(person instanceof Object);//变量person是Object吗?console.log(colors instanceof Array);//变量colors是Array吗?console.log(pattern instanceof RegExp);//变量pattern是RegExp吗? 按照定义，所有引用值都是Object的实例，因此通过instanceof操作符检测任何引用值和Object构造函数都会返回true。类似地，如果用instanceof检测原始值，则始终会返回false，因为原始值不是对象。","link":"/2021/05/22/%E7%A1%AE%E5%AE%9A%E7%B1%BB%E5%9E%8B/"}],"tags":[{"name":"笔记","slug":"笔记","link":"/tags/%E7%AC%94%E8%AE%B0/"}],"categories":[{"name":"学习","slug":"学习","link":"/categories/%E5%AD%A6%E4%B9%A0/"}]}